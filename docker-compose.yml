services:
  # Backend Application
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: no-js-ai-backend
    ports:
      - "3000:3000"
    env_file:
      - docker.env
    environment:
      - NODE_ENV=production
      - PORT=3000
      - MONGODB_URI=mongodb://mongodb:27017/no-js-ai-chat
      - OLLAMA_URL=http://host.docker.internal:11434
      # Set logging level for container
      - LOG_LEVEL=info
      # Enable rate limiting in production
      - RATE_LIMIT_ENABLED=true
      # Security settings
      - SESSION_SECRET=${SESSION_SECRET:-change-this-secret-in-production}
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - no-js-ai-network
    restart: unless-stopped
    volumes:
      - backend_logs:/app/logs
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 45s
    # Resource limits for better container management
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  # MongoDB Database
  mongodb:
    image: mongo:7-jammy
    container_name: no-js-ai-mongodb
    environment:
      - MONGO_INITDB_DATABASE=no-js-ai-chat
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - no-js-ai-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    # Resource limits for MongoDB
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'

  # Optional: MongoDB Express for database management (development only)
  mongo-express:
    image: mongo-express:1.0.0-alpha
    container_name: no-js-ai-mongo-express
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_ROOT_USER:-admin}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_ROOT_PASSWORD:-changeme}
      - ME_CONFIG_BASICAUTH_USERNAME=${MONGO_EXPRESS_USER:-admin}
      - ME_CONFIG_BASICAUTH_PASSWORD=${MONGO_EXPRESS_PASSWORD:-pass}
    ports:
      - "8081:8081"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - no-js-ai-network
    restart: unless-stopped
    profiles:
      - dev
      - development

networks:
  no-js-ai-network:
    driver: bridge
    name: no-js-ai-network

volumes:
  mongodb_data:
    driver: local
    name: no-js-ai-mongodb-data
  mongodb_config:
    driver: local
    name: no-js-ai-mongodb-config
  backend_logs:
    driver: local
    name: no-js-ai-backend-logs